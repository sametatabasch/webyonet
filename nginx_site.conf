# 1. www.SUBDOMAIN adresini yönlendirme
server {
    listen 80;
    listen [::]:80;
    server_name www.SUBDOMAIN;

    return 301 http://SUBDOMAIN$request_uri;
}

# SUBDOMAIN - Only HTTP configuration for initial Certbot setup

limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
limit_req zone=one burst=5;

server {
    listen 80;
    listen [::]:80;
    server_name SUBDOMAIN;

    root WEB_DIR;
    index index.php;

    ### Logs
    access_log /var/log/nginx/SUBDOMAIN-access.log;
    # if the log files become too large, you may use the following format. $loggable is defined in conf.d/common.conf
    # access_log /var/log/nginx/SUBDOMAIN-access.log combined buffer=64k flush=5m if=$loggable;

    # ideally use it along with fail2ban
    error_log /var/log/nginx/SUBDOMAIN-error.log;
    # use the following pattern only for debugging - server support needed
    # error_log /var/log/nginx/SUBDOMAIN-error.log debug;

    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; object-src 'none';" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # XML-RPC devre dışı
    location = /xmlrpc.php {
        deny all;
    }

    include "globals/restrictions.conf";
    include "globals/assets.conf";

    location ~* \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) { return 404; }

        fastcgi_param HTTP_PROXY "";

        include "fastcgi_params";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;

        add_header "X-Cache" "MISS";

        if ($arg_add-to-cart != "") {
            set $skip_cache 1;
        }

        set $rt_session "";
        if ($http_cookie ~* "wc_session_cookie_[^=]*=([^%]+)%7C") {
            set $rt_session wc_session_cookie_$1;
        }

        fastcgi_cache_key "$scheme$request_method$host$request_uri$rt_session";
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache FASTCGI;
        fastcgi_cache_valid 200 60m;
        fastcgi_cache_valid 404 1m;

        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_busy_buffers_size 32k;
        fastcgi_temp_file_write_size 32k;
        fastcgi_read_timeout 300;

        try_files $uri =404;
    }

    include "globals/wp-super-cache.conf";
    # diğer cache eklentilerini kullanıyorsan yukarıdaki satırı uygun şekilde değiştir.

    location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
        expires 30d;
        log_not_found off;
        add_header Cache-Control "public, max-age=2592000";
    }

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Expect-CT "enforce, max-age=30";

    location = /robots.txt {
        allow all;
        log_not_found off;
    }

    location ~* wp-config.php {
        deny all;
    }
}